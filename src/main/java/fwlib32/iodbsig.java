package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbsig extends Structure {
	/** dummy */
	public short datano;
	/** dummy */
	public short type;
	public fwlib32.iodbprm.data_struct[] data = new fwlib32.iodbprm.data_struct[20];
	public static class data_struct extends Structure {
		/** entry number */
		public short ent_no;
		/** signal number */
		public short sig_no;
		/** signal name */
		public byte sig_name;
		/** signal mask pattern */
		public byte mask_pat;
		public data_struct() {
			super();
		}
		protected List<String> getFieldOrder() {
			return Arrays.asList("ent_no", "sig_no", "sig_name", "mask_pat");
		}
		public data_struct(short ent_no, short sig_no, byte sig_name, byte mask_pat) {
			super();
			this.ent_no = ent_no;
			this.sig_no = sig_no;
			this.sig_name = sig_name;
			this.mask_pat = mask_pat;
		}
		public data_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends data_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends data_struct implements Structure.ByValue {
			
		};
	};
	public iodbsig() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("datano", "type", "data");
	}
	public iodbsig(short datano, short type, fwlib32.iodbprm.data_struct data[]) {
		super();
		this.datano = datano;
		this.type = type;
		if ((data.length != this.data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
	}
	public iodbsig(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbsig implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbsig implements Structure.ByValue {
		
	};
}
