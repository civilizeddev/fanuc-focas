package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagODBIFSBCOMSTATDTL extends Structure {
	/** \ufffdG\ufffd\ufffd?\ufffd\ufffd\ufffd */
	public NativeLong error_inf;
	/** \ufffdW\ufffdb?\ufffd\ufffd\ufffd */
	public NativeLong jitter_inf;
	/** \ufffdm\ufffdC\ufffdY\ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffdt\ufffd\ufffd\ufffdO */
	public byte n_warning;
	/** \ufffdW\ufffdb?\ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffdt\ufffd\ufffd\ufffdO */
	public byte j_warning;
	/** \ufffd\ufffd\ufffdU?\ufffdu */
	public byte[] reserve = new byte[2];
	public tagODBIFSBCOMSTATDTL() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("error_inf", "jitter_inf", "n_warning", "j_warning", "reserve");
	}
	public tagODBIFSBCOMSTATDTL(NativeLong error_inf, NativeLong jitter_inf, byte n_warning, byte j_warning, byte reserve[]) {
		super();
		this.error_inf = error_inf;
		this.jitter_inf = jitter_inf;
		this.n_warning = n_warning;
		this.j_warning = j_warning;
		if ((reserve.length != this.reserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve = reserve;
	}
	public tagODBIFSBCOMSTATDTL(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagODBIFSBCOMSTATDTL implements Structure.ByReference {
		
	};
	public static class ByValue extends tagODBIFSBCOMSTATDTL implements Structure.ByValue {
		
	};
}
