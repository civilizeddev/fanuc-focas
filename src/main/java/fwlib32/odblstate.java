package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odblstate extends Structure {
	public NativeLong cmd_feed;
	public NativeLong act_feed;
	public short cmd_power;
	public short cmd_freq;
	public short cmd_duty;
	public byte beam;
	public byte beam_lock;
	public byte cw_mode;
	public byte pulse_mode;
	public byte cmd_feed_dec;
	public byte act_feed_dec;
	public byte[] reserve = new byte[8];
	public odblstate() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("cmd_feed", "act_feed", "cmd_power", "cmd_freq", "cmd_duty", "beam", "beam_lock", "cw_mode", "pulse_mode", "cmd_feed_dec", "act_feed_dec", "reserve");
	}
	public odblstate(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odblstate implements Structure.ByReference {
		
	};
	public static class ByValue extends odblstate implements Structure.ByValue {
		
	};
}
