package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class poselm extends Structure {
	/** position data */
	public NativeLong data;
	/** decimal position */
	public short dec;
	/** data unit */
	public short unit;
	/** display flag */
	public short disp;
	/** axis name */
	public byte name;
	/** suffix */
	public byte suff;
	public poselm() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("data", "dec", "unit", "disp", "name", "suff");
	}
	public poselm(NativeLong data, short dec, short unit, short disp, byte name, byte suff) {
		super();
		this.data = data;
		this.dec = dec;
		this.unit = unit;
		this.disp = disp;
		this.name = name;
		this.suff = suff;
	}
	public poselm(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends poselm implements Structure.ByReference {
		
	};
	public static class ByValue extends poselm implements Structure.ByValue {
		
	};
}
