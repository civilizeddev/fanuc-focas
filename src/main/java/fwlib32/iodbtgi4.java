package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbtgi4 extends Structure {
	/** group number */
	public short grp_no;
	public NativeLong n_tool;
	public NativeLong count_value;
	public NativeLong counter;
	public NativeLong count_type;
	public NativeLong opt_grpno;
	public NativeLong life_rest;
	public iodbtgi4() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("grp_no", "n_tool", "count_value", "counter", "count_type", "opt_grpno", "life_rest");
	}
	public iodbtgi4(short grp_no, NativeLong n_tool, NativeLong count_value, NativeLong counter, NativeLong count_type, NativeLong opt_grpno, NativeLong life_rest) {
		super();
		this.grp_no = grp_no;
		this.n_tool = n_tool;
		this.count_value = count_value;
		this.counter = counter;
		this.count_type = count_type;
		this.opt_grpno = opt_grpno;
		this.life_rest = life_rest;
	}
	public iodbtgi4(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbtgi4 implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbtgi4 implements Structure.ByValue {
		
	};
}
