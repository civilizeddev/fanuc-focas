package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbtlinfo extends Structure {
	/** maximum number of tool groups */
	public NativeLong max_group;
	/** maximum number of tool within group */
	public NativeLong max_tool;
	/** maximum number of life count (minutes) */
	public NativeLong max_minute;
	/** maximum number of life count (cycles) */
	public NativeLong max_cycle;
	public odbtlinfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("max_group", "max_tool", "max_minute", "max_cycle");
	}
	public odbtlinfo(NativeLong max_group, NativeLong max_tool, NativeLong max_minute, NativeLong max_cycle) {
		super();
		this.max_group = max_group;
		this.max_tool = max_tool;
		this.max_minute = max_minute;
		this.max_cycle = max_cycle;
	}
	public odbtlinfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbtlinfo implements Structure.ByReference {
		
	};
	public static class ByValue extends odbtlinfo implements Structure.ByValue {
		
	};
}
