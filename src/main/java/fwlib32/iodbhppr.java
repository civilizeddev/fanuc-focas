package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbhppr extends Structure {
	public iodbhppr.tune_struct[] tune = new iodbhppr.tune_struct[3];
	public static class tune_struct extends Structure {
		public short slct;
		public short diff;
		public short fine;
		public short acc_lv;
		public NativeLong max_f;
		public short bipl;
		public short aipl;
		public NativeLong corner;
		public short clamp;
		public NativeLong radius;
		public NativeLong max_cf;
		public NativeLong min_cf;
		public NativeLong foward;
		public NativeLong[] reserve = new NativeLong[5];
		public tune_struct() {
			super();
		}
		protected List<String> getFieldOrder() {
			return Arrays.asList("slct", "diff", "fine", "acc_lv", "max_f", "bipl", "aipl", "corner", "clamp", "radius", "max_cf", "min_cf", "foward", "reserve");
		}
		public tune_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends tune_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends tune_struct implements Structure.ByValue {
			
		};
	};
	public iodbhppr() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("tune");
	}
	public iodbhppr(iodbhppr.tune_struct tune[]) {
		super();
		if ((tune.length != this.tune.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.tune = tune;
	}
	public iodbhppr(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbhppr implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbhppr implements Structure.ByValue {
		
	};
}
