package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbovstr extends Structure {
	/** M code */
	public iodbovmst mcode;
	/** S code */
	public iodbovmst scode;
	/** T code */
	public iodbovmst tcode;
	/** B code */
	public iodbovmst bcode;
	public iodbovstr() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("mcode", "scode", "tcode", "bcode");
	}
	public iodbovstr(iodbovmst mcode, iodbovmst scode, iodbovmst tcode, iodbovmst bcode) {
		super();
		this.mcode = mcode;
		this.scode = scode;
		this.tcode = tcode;
		this.bcode = bcode;
	}
	public iodbovstr(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbovstr implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbovstr implements Structure.ByValue {
		
	};
}
