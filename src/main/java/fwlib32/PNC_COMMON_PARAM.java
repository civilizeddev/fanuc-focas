package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PNC_COMMON_PARAM extends Structure {
	public byte[] OwnMacAddress = new byte[16];
	public byte[] OwnIpAddress = new byte[40];
	public byte[] SubNetmask = new byte[16];
	public byte[] RouterIpAddress = new byte[40];
	public PNC_COMMON_PARAM() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("OwnMacAddress", "OwnIpAddress", "SubNetmask", "RouterIpAddress");
	}
	public PNC_COMMON_PARAM(byte OwnMacAddress[], byte OwnIpAddress[], byte SubNetmask[], byte RouterIpAddress[]) {
		super();
		if ((OwnMacAddress.length != this.OwnMacAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.OwnMacAddress = OwnMacAddress;
		if ((OwnIpAddress.length != this.OwnIpAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.OwnIpAddress = OwnIpAddress;
		if ((SubNetmask.length != this.SubNetmask.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.SubNetmask = SubNetmask;
		if ((RouterIpAddress.length != this.RouterIpAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.RouterIpAddress = RouterIpAddress;
	}
	public PNC_COMMON_PARAM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PNC_COMMON_PARAM implements Structure.ByReference {
		
	};
	public static class ByValue extends PNC_COMMON_PARAM implements Structure.ByValue {
		
	};
}
