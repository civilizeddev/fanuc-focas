package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IN_DNMPRMFLAG2 extends Structure {
	public flg_union flg;
	public static class flg_union extends Union {
		public IN_DNMPRMFLAG_BUS2 bus;
		public IN_DNMPRMFLAG_SLAVE slave;
		public flg_union() {
			super();
		}
		public flg_union(IN_DNMPRMFLAG_BUS2 bus) {
			super();
			this.bus = bus;
			setType(IN_DNMPRMFLAG_BUS2.class);
		}
		public flg_union(IN_DNMPRMFLAG_SLAVE slave) {
			super();
			this.slave = slave;
			setType(IN_DNMPRMFLAG_SLAVE.class);
		}
		public flg_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends flg_union implements Structure.ByReference {
			
		};
		public static class ByValue extends flg_union implements Structure.ByValue {
			
		};
	};
	public IN_DNMPRMFLAG2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("flg");
	}
	public IN_DNMPRMFLAG2(flg_union flg) {
		super();
		this.flg = flg;
	}
	public IN_DNMPRMFLAG2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IN_DNMPRMFLAG2 implements Structure.ByReference {
		
	};
	public static class ByValue extends IN_DNMPRMFLAG2 implements Structure.ByValue {
		
	};
}
