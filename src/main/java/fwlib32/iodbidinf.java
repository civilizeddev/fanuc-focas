package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbidinf extends Structure {
	public NativeLong id_no;
	public short drv_no;
	public short acc_element;
	public short err_general;
	public short err_id_no;
	public short err_id_name;
	public short err_attr;
	public short err_unit;
	public short err_min_val;
	public short err_max_val;
	public short id_name_len;
	public short id_name_max;
	public byte[] id_name = new byte[60];
	public NativeLong attr;
	public short unit_len;
	public short unit_max;
	public byte[] unit = new byte[12];
	public NativeLong min_val;
	public NativeLong max_val;
	public iodbidinf() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("id_no", "drv_no", "acc_element", "err_general", "err_id_no", "err_id_name", "err_attr", "err_unit", "err_min_val", "err_max_val", "id_name_len", "id_name_max", "id_name", "attr", "unit_len", "unit_max", "unit", "min_val", "max_val");
	}
	public iodbidinf(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbidinf implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbidinf implements Structure.ByValue {
		
	};
}
