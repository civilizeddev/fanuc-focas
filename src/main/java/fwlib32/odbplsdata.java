package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbplsdata extends Structure {
	/** Pulse Type */
	public short pulse_type;
	/** Channel Connect State */
	public short channel_state;
	/** reserve */
	public short reserve1;
	/** reserve */
	public short reserve2;
	/** Alarm Detail(CH1?4) */
	public short[] alarm = new short[4];
	/** Command Value(CH1?4) */
	public short[] cmd_val = new short[4];
	/** reserve */
	public short[] reserve3 = new short[4];
	/** Total Value(CH1?4) */
	public NativeLong[] total_val = new NativeLong[4];
	/** reserve */
	public NativeLong[] reserve4 = new NativeLong[4];
	public odbplsdata() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("pulse_type", "channel_state", "reserve1", "reserve2", "alarm", "cmd_val", "reserve3", "total_val", "reserve4");
	}
	public odbplsdata(short pulse_type, short channel_state, short reserve1, short reserve2, short alarm[], short cmd_val[], short reserve3[], NativeLong total_val[], NativeLong reserve4[]) {
		super();
		this.pulse_type = pulse_type;
		this.channel_state = channel_state;
		this.reserve1 = reserve1;
		this.reserve2 = reserve2;
		if ((alarm.length != this.alarm.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.alarm = alarm;
		if ((cmd_val.length != this.cmd_val.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.cmd_val = cmd_val;
		if ((reserve3.length != this.reserve3.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve3 = reserve3;
		if ((total_val.length != this.total_val.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.total_val = total_val;
		if ((reserve4.length != this.reserve4.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve4 = reserve4;
	}
	public odbplsdata(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbplsdata implements Structure.ByReference {
		
	};
	public static class ByValue extends odbplsdata implements Structure.ByValue {
		
	};
}
