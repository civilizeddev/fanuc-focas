package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class idbtwp_3p_fmt extends Structure {
	public double[] p1 = new double[3];
	public double[] p2 = new double[3];
	public double[] p3 = new double[3];
	public double[] sft = new double[3];
	public double rot;
	public NativeLong[] reserve = new NativeLong[10];
	public idbtwp_3p_fmt() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("p1", "p2", "p3", "sft", "rot", "reserve");
	}
	public idbtwp_3p_fmt(double p1[], double p2[], double p3[], double sft[], double rot, NativeLong reserve[]) {
		super();
		if ((p1.length != this.p1.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.p1 = p1;
		if ((p2.length != this.p2.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.p2 = p2;
		if ((p3.length != this.p3.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.p3 = p3;
		if ((sft.length != this.sft.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.sft = sft;
		this.rot = rot;
		if ((reserve.length != this.reserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve = reserve;
	}
	public idbtwp_3p_fmt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends idbtwp_3p_fmt implements Structure.ByReference {
		
	};
	public static class ByValue extends idbtwp_3p_fmt implements Structure.ByValue {
		
	};
}
