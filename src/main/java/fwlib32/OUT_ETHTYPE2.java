package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_ETHTYPE2 extends Structure {
	public short Kind;
	public short dummy;
	public NativeLong FunctionEmb;
	public NativeLong FunctionEmbPcm;
	public NativeLong FunctionBoard;
	public NativeLong FunctionEmbCe;
	public NativeLong FunctionEmbCePcm;
	public OUT_ETHTYPE2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("Kind", "dummy", "FunctionEmb", "FunctionEmbPcm", "FunctionBoard", "FunctionEmbCe", "FunctionEmbCePcm");
	}
	public OUT_ETHTYPE2(short Kind, short dummy, NativeLong FunctionEmb, NativeLong FunctionEmbPcm, NativeLong FunctionBoard, NativeLong FunctionEmbCe, NativeLong FunctionEmbCePcm) {
		super();
		this.Kind = Kind;
		this.dummy = dummy;
		this.FunctionEmb = FunctionEmb;
		this.FunctionEmbPcm = FunctionEmbPcm;
		this.FunctionBoard = FunctionBoard;
		this.FunctionEmbCe = FunctionEmbCe;
		this.FunctionEmbCePcm = FunctionEmbCePcm;
	}
	public OUT_ETHTYPE2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_ETHTYPE2 implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_ETHTYPE2 implements Structure.ByValue {
		
	};
}
