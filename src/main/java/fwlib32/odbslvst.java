package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbslvst extends Structure {
	public byte cnfg_stat;
	public byte prm_stat;
	public byte wdg_stat;
	public byte live_stat;
	public short ident_no;
	public odbslvst() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("cnfg_stat", "prm_stat", "wdg_stat", "live_stat", "ident_no");
	}
	public odbslvst(byte cnfg_stat, byte prm_stat, byte wdg_stat, byte live_stat, short ident_no) {
		super();
		this.cnfg_stat = cnfg_stat;
		this.prm_stat = prm_stat;
		this.wdg_stat = wdg_stat;
		this.live_stat = live_stat;
		this.ident_no = ident_no;
	}
	public odbslvst(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbslvst implements Structure.ByReference {
		
	};
	public static class ByValue extends odbslvst implements Structure.ByValue {
		
	};
}
