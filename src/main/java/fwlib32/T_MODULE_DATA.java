package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class T_MODULE_DATA extends Structure {
	public T_SLOT_IND_PARA slt_ind_para;
	public short module_len;
	public byte[] module_data = new byte[128];
	public T_MODULE_DATA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("slt_ind_para", "module_len", "module_data");
	}
	public T_MODULE_DATA(T_SLOT_IND_PARA slt_ind_para, short module_len, byte module_data[]) {
		super();
		this.slt_ind_para = slt_ind_para;
		this.module_len = module_len;
		if ((module_data.length != this.module_data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.module_data = module_data;
	}
	public T_MODULE_DATA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends T_MODULE_DATA implements Structure.ByReference {
		
	};
	public static class ByValue extends T_MODULE_DATA implements Structure.ByValue {
		
	};
}
