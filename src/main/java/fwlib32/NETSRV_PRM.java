package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NETSRV_PRM extends Structure {
	public byte[] HostName = new byte[64];
	public NativeLong Port;
	public NativeLong TimeInterval;
	public NativeLong UdpPeriod;
	public byte[] MachineNumber = new byte[25];
	public byte[] dummy1 = new byte[7];
	public byte[] AcceptanceReply = new byte[25];
	public byte[] dummy2 = new byte[7];
	public byte[] ErrorReply = new byte[25];
	public byte[] dummy3 = new byte[7];
	public NETSRV_PRM() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("HostName", "Port", "TimeInterval", "UdpPeriod", "MachineNumber", "dummy1", "AcceptanceReply", "dummy2", "ErrorReply", "dummy3");
	}
	public NETSRV_PRM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends NETSRV_PRM implements Structure.ByReference {
		
	};
	public static class ByValue extends NETSRV_PRM implements Structure.ByValue {
		
	};
}
