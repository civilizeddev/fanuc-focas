package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbptcnvinfo2 extends Structure {
	public short[] executing = new short[((2) * (10))];
	public NativeLong[] conv_status = new NativeLong[((2) * (10))];
	public short[] ofs_change = new short[((2) * (10))];
	public odbptcnvinfo2() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("executing", "conv_status", "ofs_change");
	}
	public odbptcnvinfo2(short executing[], NativeLong conv_status[], short ofs_change[]) {
		super();
		if ((executing.length != this.executing.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.executing = executing;
		if ((conv_status.length != this.conv_status.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.conv_status = conv_status;
		if ((ofs_change.length != this.ofs_change.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ofs_change = ofs_change;
	}
	public odbptcnvinfo2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbptcnvinfo2 implements Structure.ByReference {
		
	};
	public static class ByValue extends odbptcnvinfo2 implements Structure.ByValue {
		
	};
}
