package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class T_SLAVE_PARA extends Structure {
	public T_SLAVE_IND_PARA slv_ind_para;
	public byte sl_flag;
	public byte slave_type;
	public byte[] reserved = new byte[12];
	public T_PRM_DATA prm_data;
	public T_CFG_DATA cfg_data;
	public T_SLV_USR_DATA slv_usr;
	public T_SLAVE_PARA() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("slv_ind_para", "sl_flag", "slave_type", "reserved", "prm_data", "cfg_data", "slv_usr");
	}
	public T_SLAVE_PARA(T_SLAVE_IND_PARA slv_ind_para, byte sl_flag, byte slave_type, byte reserved[], T_PRM_DATA prm_data, T_CFG_DATA cfg_data, T_SLV_USR_DATA slv_usr) {
		super();
		this.slv_ind_para = slv_ind_para;
		this.sl_flag = sl_flag;
		this.slave_type = slave_type;
		if ((reserved.length != this.reserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserved = reserved;
		this.prm_data = prm_data;
		this.cfg_data = cfg_data;
		this.slv_usr = slv_usr;
	}
	public T_SLAVE_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends T_SLAVE_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends T_SLAVE_PARA implements Structure.ByValue {
		
	};
}
