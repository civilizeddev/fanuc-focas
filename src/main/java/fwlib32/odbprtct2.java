package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbprtct2 extends Structure {
	/** for disp */
	public short disp;
	/** for edit */
	public short edit;
	/** for encode */
	public short encd;
	/** for program lock */
	public short lock;
	/** for output */
	public short output;
	public short dummy;
	public odbprtct2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("disp", "edit", "encd", "lock", "output", "dummy");
	}
	public odbprtct2(short disp, short edit, short encd, short lock, short output, short dummy) {
		super();
		this.disp = disp;
		this.edit = edit;
		this.encd = encd;
		this.lock = lock;
		this.output = output;
		this.dummy = dummy;
	}
	public odbprtct2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbprtct2 implements Structure.ByReference {
		
	};
	public static class ByValue extends odbprtct2 implements Structure.ByValue {
		
	};
}
