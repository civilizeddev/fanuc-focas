package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ODBETMSG extends Structure {
	public byte[] title = new byte[33];
	public byte[] message = new byte[((10) * (39))];
	public ODBETMSG() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("title", "message");
	}
	public ODBETMSG(byte title[], byte message[]) {
		super();
		if ((title.length != this.title.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.title = title;
		if ((message.length != this.message.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.message = message;
	}
	public ODBETMSG(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ODBETMSG implements Structure.ByReference {
		
	};
	public static class ByValue extends ODBETMSG implements Structure.ByValue {
		
	};
}
