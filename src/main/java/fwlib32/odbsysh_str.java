package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbsysh_str extends Structure {
	public short group_id;
	public byte[] group_name = new byte[14];
	public short hard_id;
	public byte[] hard_name = new byte[13];
	public byte[] id1 = new byte[11];
	public byte[] id2 = new byte[9];
	public byte[] slot_no = new byte[3];
	public byte[] dummy = new byte[2];
	public odbsysh_str() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("group_id", "group_name", "hard_id", "hard_name", "id1", "id2", "slot_no", "dummy");
	}
	public odbsysh_str(short group_id, byte group_name[], short hard_id, byte hard_name[], byte id1[], byte id2[], byte slot_no[], byte dummy[]) {
		super();
		this.group_id = group_id;
		if ((group_name.length != this.group_name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.group_name = group_name;
		this.hard_id = hard_id;
		if ((hard_name.length != this.hard_name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.hard_name = hard_name;
		if ((id1.length != this.id1.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id1 = id1;
		if ((id2.length != this.id2.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id2 = id2;
		if ((slot_no.length != this.slot_no.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.slot_no = slot_no;
		if ((dummy.length != this.dummy.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dummy = dummy;
	}
	public odbsysh_str(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbsysh_str implements Structure.ByReference {
		
	};
	public static class ByValue extends odbsysh_str implements Structure.ByValue {
		
	};
}
