package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EIPS_ALLOC_PRM extends Structure {
	public byte[] IpAddress = new byte[40];
	public byte Option1;
	public byte Option2;
	public byte DataUnit;
	public byte Endian;
	public NativeLong ConfigInstance;
	public EIPS_CONN_PRM ConnT2O;
	public EIPS_CONN_PRM ConnO2T;
	public EIP_PMC_ADDR reserve1;
	public EIP_PMC_ADDR reserve2;
	public byte ProductTrigger;
	public byte Timeout;
	public byte Reconnect;
	public byte pad;
	public EIPS_ELECTRONIC_KEY ElectronicKey;
	public NativeLong DataPerSec;
	public NativeLong DataPerSecTotal;
	public EIPS_ALLOC_PRM() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("IpAddress", "Option1", "Option2", "DataUnit", "Endian", "ConfigInstance", "ConnT2O", "ConnO2T", "reserve1", "reserve2", "ProductTrigger", "Timeout", "Reconnect", "pad", "ElectronicKey", "DataPerSec", "DataPerSecTotal");
	}
	public EIPS_ALLOC_PRM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends EIPS_ALLOC_PRM implements Structure.ByReference {
		
	};
	public static class ByValue extends EIPS_ALLOC_PRM implements Structure.ByValue {
		
	};
}
