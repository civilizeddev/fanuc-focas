package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbpmcadr extends Structure {
	/** PMC address type */
	public short pmc_adr;
	/** PMC address attribute */
	public short adr_attr;
	/** offset address from the top of the PMC address area */
	public NativeLong adr;
	/** top number of the PMC address area */
	public NativeLong top;
	/** number of the PMC address area */
	public NativeLong num;
	public odbpmcadr() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pmc_adr", "adr_attr", "adr", "top", "num");
	}
	public odbpmcadr(short pmc_adr, short adr_attr, NativeLong adr, NativeLong top, NativeLong num) {
		super();
		this.pmc_adr = pmc_adr;
		this.adr_attr = adr_attr;
		this.adr = adr;
		this.top = top;
		this.num = num;
	}
	public odbpmcadr(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbpmcadr implements Structure.ByReference {
		
	};
	public static class ByValue extends odbpmcadr implements Structure.ByValue {
		
	};
}
