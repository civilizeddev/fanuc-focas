package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IN_CCLRPRMFLAG extends Structure {
	public byte BaudRate;
	public byte ID;
	public byte UseIDCount;
	public byte DataOnAbnormal;
	public byte Status;
	public byte RY;
	public byte RYSize;
	public byte RX;
	public byte RXSize;
	public byte RWw;
	public byte RWwSize;
	public byte RWr;
	public byte RWrSize;
	public byte[] pad = new byte[3];
	public IN_CCLRPRMFLAG() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("BaudRate", "ID", "UseIDCount", "DataOnAbnormal", "Status", "RY", "RYSize", "RX", "RXSize", "RWw", "RWwSize", "RWr", "RWrSize", "pad");
	}
	public IN_CCLRPRMFLAG(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IN_CCLRPRMFLAG implements Structure.ByReference {
		
	};
	public static class ByValue extends IN_CCLRPRMFLAG implements Structure.ByValue {
		
	};
}
