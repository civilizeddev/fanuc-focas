package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbmdgwvdt extends Structure {
	public NativeLong[] ldata = new NativeLong[500];
	public short p_dec;
	public short num;
	public short channel;
	public short axis;
	public short kind;
	public short interval;
	public short t_cycle;
	public byte unit;
	public byte sw_alm;
	public odbmdgwvdt() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ldata", "p_dec", "num", "channel", "axis", "kind", "interval", "t_cycle", "unit", "sw_alm");
	}
	public odbmdgwvdt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbmdgwvdt implements Structure.ByReference {
		
	};
	public static class ByValue extends odbmdgwvdt implements Structure.ByValue {
		
	};
}
