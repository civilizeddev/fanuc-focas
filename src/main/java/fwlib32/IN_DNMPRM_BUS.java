package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IN_DNMPRM_BUS extends Structure {
	public short Network;
	public short BaudRate;
	public short DiDataOnAbnormal;
	public short OwnMacId;
	public PMC_REG CommonStatus;
	public short CommonStatusSize;
	public short CycleTimeSetting;
	public short[] reserved = new short[8];
	public IN_DNMPRM_BUS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Network", "BaudRate", "DiDataOnAbnormal", "OwnMacId", "CommonStatus", "CommonStatusSize", "CycleTimeSetting", "reserved");
	}
	public IN_DNMPRM_BUS(short Network, short BaudRate, short DiDataOnAbnormal, short OwnMacId, PMC_REG CommonStatus, short CommonStatusSize, short CycleTimeSetting, short reserved[]) {
		super();
		this.Network = Network;
		this.BaudRate = BaudRate;
		this.DiDataOnAbnormal = DiDataOnAbnormal;
		this.OwnMacId = OwnMacId;
		this.CommonStatus = CommonStatus;
		this.CommonStatusSize = CommonStatusSize;
		this.CycleTimeSetting = CycleTimeSetting;
		if ((reserved.length != this.reserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserved = reserved;
	}
	public IN_DNMPRM_BUS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IN_DNMPRM_BUS implements Structure.ByReference {
		
	};
	public static class ByValue extends IN_DNMPRM_BUS implements Structure.ByValue {
		
	};
}
