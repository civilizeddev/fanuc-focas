package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbusbinfo extends Structure {
	/** number of files actually acquired */
	public short f_num;
	/** next file entry */
	public byte next_entry;
	public byte dummy;
	/** number of total files */
	public NativeLong total;
	public odbusbinfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("f_num", "next_entry", "dummy", "total");
	}
	public odbusbinfo(short f_num, byte next_entry, byte dummy, NativeLong total) {
		super();
		this.f_num = f_num;
		this.next_entry = next_entry;
		this.dummy = dummy;
		this.total = total;
	}
	public odbusbinfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbusbinfo implements Structure.ByReference {
		
	};
	public static class ByValue extends odbusbinfo implements Structure.ByValue {
		
	};
}
