package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EIPS_CONN_PRM extends Structure {
	public NativeLong AssemblyInstance;
	public short Type;
	public byte[] pad1 = new byte[2];
	public EIP_MULTI_ADDR Addr;
	public NativeLong Size;
	public NativeLong RPI;
	public short TransportType;
	public short HeaderFormat;
	public short Priority;
	public byte[] pad2 = new byte[2];
	public byte[] reserve = new byte[28];
	public byte[] pad3 = new byte[4];
	public EIPS_CONN_PRM() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("AssemblyInstance", "Type", "pad1", "Addr", "Size", "RPI", "TransportType", "HeaderFormat", "Priority", "pad2", "reserve", "pad3");
	}
	public EIPS_CONN_PRM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends EIPS_CONN_PRM implements Structure.ByReference {
		
	};
	public static class ByValue extends EIPS_CONN_PRM implements Structure.ByValue {
		
	};
}
