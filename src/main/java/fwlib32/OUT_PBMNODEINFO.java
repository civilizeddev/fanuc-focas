package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_PBMNODEINFO extends Structure {
	public byte slv_no;
	public byte commstat;
	public byte status1;
	public byte status2;
	public byte status3;
	public byte master;
	public short ident;
	public OUT_PBMNODEINFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("slv_no", "commstat", "status1", "status2", "status3", "master", "ident");
	}
	public OUT_PBMNODEINFO(byte slv_no, byte commstat, byte status1, byte status2, byte status3, byte master, short ident) {
		super();
		this.slv_no = slv_no;
		this.commstat = commstat;
		this.status1 = status1;
		this.status2 = status2;
		this.status3 = status3;
		this.master = master;
		this.ident = ident;
	}
	public OUT_PBMNODEINFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_PBMNODEINFO implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_PBMNODEINFO implements Structure.ByValue {
		
	};
}
