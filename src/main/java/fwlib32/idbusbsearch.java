package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class idbusbsearch extends Structure {
	/** base path */
	public byte[] path = new byte[256];
	/** search file/folder name */
	public byte[] s_fname = new byte[36];
	/** attribute */
	public short req_attrib;
	/** sort flag */
	public byte sort;
	public byte dummy;
	public idbusbsearch() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("path", "s_fname", "req_attrib", "sort", "dummy");
	}
	public idbusbsearch(byte path[], byte s_fname[], short req_attrib, byte sort, byte dummy) {
		super();
		if ((path.length != this.path.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.path = path;
		if ((s_fname.length != this.s_fname.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.s_fname = s_fname;
		this.req_attrib = req_attrib;
		this.sort = sort;
		this.dummy = dummy;
	}
	public idbusbsearch(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends idbusbsearch implements Structure.ByReference {
		
	};
	public static class ByValue extends idbusbsearch implements Structure.ByValue {
		
	};
}
