package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagODBIFSBINFO extends Structure {
	/** Mount Status */
	public byte fssb_line_mnt_st;
	/** Mount Status */
	public byte reserve;
	/** Card Num */
	public short card_num;
	/** Line information */
	public tagODBIFSBLINE[] line_info = new tagODBIFSBLINE[3];
	public tagODBIFSBINFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("fssb_line_mnt_st", "reserve", "card_num", "line_info");
	}
	public tagODBIFSBINFO(byte fssb_line_mnt_st, byte reserve, short card_num, tagODBIFSBLINE line_info[]) {
		super();
		this.fssb_line_mnt_st = fssb_line_mnt_st;
		this.reserve = reserve;
		this.card_num = card_num;
		if ((line_info.length != this.line_info.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.line_info = line_info;
	}
	public tagODBIFSBINFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagODBIFSBINFO implements Structure.ByReference {
		
	};
	public static class ByValue extends tagODBIFSBINFO implements Structure.ByValue {
		
	};
}
