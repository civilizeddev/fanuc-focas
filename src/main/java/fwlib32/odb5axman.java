package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odb5axman extends Structure {
	public short type1;
	public short type2;
	public short type3;
	public NativeLong data1;
	public NativeLong data2;
	public NativeLong data3;
	public NativeLong c1;
	public NativeLong c2;
	public NativeLong dummy;
	public NativeLong td;
	public NativeLong r1;
	public NativeLong r2;
	public NativeLong vr;
	public NativeLong h1;
	public NativeLong h2;
	public odb5axman() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("type1", "type2", "type3", "data1", "data2", "data3", "c1", "c2", "dummy", "td", "r1", "r2", "vr", "h1", "h2");
	}
	public odb5axman(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odb5axman implements Structure.ByReference {
		
	};
	public static class ByValue extends odb5axman implements Structure.ByValue {
		
	};
}
