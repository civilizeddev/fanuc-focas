package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbrenplt extends Structure {
	public short delay_time;
	public short data_flag;
	public short[] pos_data = new short[6];
	public odbrenplt() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("delay_time", "data_flag", "pos_data");
	}
	public odbrenplt(short delay_time, short data_flag, short pos_data[]) {
		super();
		this.delay_time = delay_time;
		this.data_flag = data_flag;
		if ((pos_data.length != this.pos_data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pos_data = pos_data;
	}
	public odbrenplt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbrenplt implements Structure.ByReference {
		
	};
	public static class ByValue extends odbrenplt implements Structure.ByValue {
		
	};
}
