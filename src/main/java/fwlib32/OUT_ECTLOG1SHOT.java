package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_ECTLOG1SHOT extends Structure {
	public short MsgId;
	public byte Year;
	public byte Month;
	public byte Day;
	public byte Hour;
	public byte Minute;
	public byte Second;
	public byte[] Text = new byte[32];
	public OUT_ECTLOG1SHOT() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("MsgId", "Year", "Month", "Day", "Hour", "Minute", "Second", "Text");
	}
	public OUT_ECTLOG1SHOT(short MsgId, byte Year, byte Month, byte Day, byte Hour, byte Minute, byte Second, byte Text[]) {
		super();
		this.MsgId = MsgId;
		this.Year = Year;
		this.Month = Month;
		this.Day = Day;
		this.Hour = Hour;
		this.Minute = Minute;
		this.Second = Second;
		if ((Text.length != this.Text.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Text = Text;
	}
	public OUT_ECTLOG1SHOT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_ECTLOG1SHOT implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_ECTLOG1SHOT implements Structure.ByValue {
		
	};
}
