package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbdischrg extends Structure {
	public short aps;
	public short year;
	public short month;
	public short day;
	public short hour;
	public short minute;
	public short second;
	public short hpc;
	public short hfq;
	public short hdt;
	public short hpa;
	public NativeLong hce;
	public NativeLong[] rfi = new NativeLong[8];
	public NativeLong[] rfv = new NativeLong[8];
	public NativeLong[] dci = new NativeLong[8];
	public NativeLong[] dcv = new NativeLong[8];
	public NativeLong[] dcw = new NativeLong[8];
	public odbdischrg() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("aps", "year", "month", "day", "hour", "minute", "second", "hpc", "hfq", "hdt", "hpa", "hce", "rfi", "rfv", "dci", "dcv", "dcw");
	}
	public odbdischrg(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbdischrg implements Structure.ByReference {
		
	};
	public static class ByValue extends odbdischrg implements Structure.ByValue {
		
	};
}
