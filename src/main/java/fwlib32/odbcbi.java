package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbcbi extends Structure {
	/** name setting */
	public short cb_no;
	/** name setting */
	public odbnme nme_set;
	/** shape number */
	public byte shp_no;
	/** cube form flag */
	public byte cd_form;
	public odbcbi() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("cb_no", "nme_set", "shp_no", "cd_form");
	}
	public odbcbi(short cb_no, odbnme nme_set, byte shp_no, byte cd_form) {
		super();
		this.cb_no = cb_no;
		this.nme_set = nme_set;
		this.shp_no = shp_no;
		this.cd_form = cd_form;
	}
	public odbcbi(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbcbi implements Structure.ByReference {
		
	};
	public static class ByValue extends odbcbi implements Structure.ByValue {
		
	};
}
