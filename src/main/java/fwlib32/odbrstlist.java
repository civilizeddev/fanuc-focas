package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbrstlist extends Structure {
	public byte[] prg_name = new byte[246];
	public byte[] dummy = new byte[2];
	public NativeLong seq_no;
	public NativeLong c_blck_cnt;
	public odbrstlist() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("prg_name", "dummy", "seq_no", "c_blck_cnt");
	}
	public odbrstlist(byte prg_name[], byte dummy[], NativeLong seq_no, NativeLong c_blck_cnt) {
		super();
		if ((prg_name.length != this.prg_name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.prg_name = prg_name;
		if ((dummy.length != this.dummy.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dummy = dummy;
		this.seq_no = seq_no;
		this.c_blck_cnt = c_blck_cnt;
	}
	public odbrstlist(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbrstlist implements Structure.ByReference {
		
	};
	public static class ByValue extends odbrstlist implements Structure.ByValue {
		
	};
}
