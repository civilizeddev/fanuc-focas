package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbprm extends Structure {
	/** data number */
	public NativeLong datano;
	/** data type */
	public short type;
	/** axis information */
	public short axis;
	/** misc information */
	public short info;
	/** unit information */
	public short unit;
	public iodbprm.data_struct[] data = new iodbprm.data_struct[32];
	public static class data_struct extends Structure {
		/** parameter / setting data */
		public NativeLong prm_val;
		public NativeLong dec_val;
		public data_struct() {
			super();
		}
		protected List<String> getFieldOrder() {
			return Arrays.asList("prm_val", "dec_val");
		}
		public data_struct(NativeLong prm_val, NativeLong dec_val) {
			super();
			this.prm_val = prm_val;
			this.dec_val = dec_val;
		}
		public data_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends data_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends data_struct implements Structure.ByValue {
			
		};
	};
	public iodbprm() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("datano", "type", "axis", "info", "unit", "data");
	}
	public iodbprm(NativeLong datano, short type, short axis, short info, short unit, iodbprm.data_struct data[]) {
		super();
		this.datano = datano;
		this.type = type;
		this.axis = axis;
		this.info = info;
		this.unit = unit;
		if ((data.length != this.data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
	}
	public iodbprm(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbprm implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbprm implements Structure.ByValue {
		
	};
}
