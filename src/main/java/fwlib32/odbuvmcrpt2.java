package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbuvmcrpt2 extends Structure {
	public byte[] prog_name = new byte[248];
	public NativeLong blk_no;
	public NativeLong uvblk_no;
	public NativeLong mult_piece_no;
	public short[] reserve = new short[2];
	public odbuvmcrpt2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("prog_name", "blk_no", "uvblk_no", "mult_piece_no", "reserve");
	}
	public odbuvmcrpt2(byte prog_name[], NativeLong blk_no, NativeLong uvblk_no, NativeLong mult_piece_no, short reserve[]) {
		super();
		if ((prog_name.length != this.prog_name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.prog_name = prog_name;
		this.blk_no = blk_no;
		this.uvblk_no = uvblk_no;
		this.mult_piece_no = mult_piece_no;
		if ((reserve.length != this.reserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve = reserve;
	}
	public odbuvmcrpt2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbuvmcrpt2 implements Structure.ByReference {
		
	};
	public static class ByValue extends odbuvmcrpt2 implements Structure.ByValue {
		
	};
}
