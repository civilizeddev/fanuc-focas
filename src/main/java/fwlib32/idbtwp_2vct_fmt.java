package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class idbtwp_2vct_fmt extends Structure {
	public double[] orign = new double[3];
	public double[] vtr1 = new double[3];
	public double[] vtr2 = new double[3];
	public NativeLong[] reserve = new NativeLong[18];
	public idbtwp_2vct_fmt() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("orign", "vtr1", "vtr2", "reserve");
	}
	public idbtwp_2vct_fmt(double orign[], double vtr1[], double vtr2[], NativeLong reserve[]) {
		super();
		if ((orign.length != this.orign.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.orign = orign;
		if ((vtr1.length != this.vtr1.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.vtr1 = vtr1;
		if ((vtr2.length != this.vtr2.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.vtr2 = vtr2;
		if ((reserve.length != this.reserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve = reserve;
	}
	public idbtwp_2vct_fmt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends idbtwp_2vct_fmt implements Structure.ByReference {
		
	};
	public static class ByValue extends idbtwp_2vct_fmt implements Structure.ByValue {
		
	};
}
