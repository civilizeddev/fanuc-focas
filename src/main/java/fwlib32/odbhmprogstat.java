package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbhmprogstat extends Structure {
	public short run;
	public short disp;
	public short alm_no;
	public short reserve;
	public NativeLong prog_no;
	public NativeLong block_no;
	public odbhmprogstat() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("run", "disp", "alm_no", "reserve", "prog_no", "block_no");
	}
	public odbhmprogstat(short run, short disp, short alm_no, short reserve, NativeLong prog_no, NativeLong block_no) {
		super();
		this.run = run;
		this.disp = disp;
		this.alm_no = alm_no;
		this.reserve = reserve;
		this.prog_no = prog_no;
		this.block_no = block_no;
	}
	public odbhmprogstat(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbhmprogstat implements Structure.ByReference {
		
	};
	public static class ByValue extends odbhmprogstat implements Structure.ByValue {
		
	};
}
