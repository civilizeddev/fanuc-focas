package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_DSSTATE extends Structure {
	public short DtsvrChannel;
	public short pad;
	public short Mode;
	public short EmptyCount;
	public NativeLong TotalSize;
	public short WritePtr;
	public short ReadPtr;
	public OUT_DSSTATE() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("DtsvrChannel", "pad", "Mode", "EmptyCount", "TotalSize", "WritePtr", "ReadPtr");
	}
	public OUT_DSSTATE(short DtsvrChannel, short pad, short Mode, short EmptyCount, NativeLong TotalSize, short WritePtr, short ReadPtr) {
		super();
		this.DtsvrChannel = DtsvrChannel;
		this.pad = pad;
		this.Mode = Mode;
		this.EmptyCount = EmptyCount;
		this.TotalSize = TotalSize;
		this.WritePtr = WritePtr;
		this.ReadPtr = ReadPtr;
	}
	public OUT_DSSTATE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_DSSTATE implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_DSSTATE implements Structure.ByValue {
		
	};
}
