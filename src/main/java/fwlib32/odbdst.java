package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbdst extends Structure {
	/** object type */
	public short ob_type;
	/** object number */
	public short obj_no;
	/** figure screen */
	public byte shp_disp;
	/** move axis screen */
	public byte mva_disp;
	public odbdst() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ob_type", "obj_no", "shp_disp", "mva_disp");
	}
	public odbdst(short ob_type, short obj_no, byte shp_disp, byte mva_disp) {
		super();
		this.ob_type = ob_type;
		this.obj_no = obj_no;
		this.shp_disp = shp_disp;
		this.mva_disp = mva_disp;
	}
	public odbdst(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbdst implements Structure.ByReference {
		
	};
	public static class ByValue extends odbdst implements Structure.ByValue {
		
	};
}
