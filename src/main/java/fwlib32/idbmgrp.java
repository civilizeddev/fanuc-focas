package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class idbmgrp extends Structure {
	public short s_no;
	public short dummy;
	public short num;
	public short[] group = new short[500];
	public idbmgrp() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("s_no", "dummy", "num", "group");
	}
	public idbmgrp(short s_no, short dummy, short num, short group[]) {
		super();
		this.s_no = s_no;
		this.dummy = dummy;
		this.num = num;
		if ((group.length != this.group.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.group = group;
	}
	public idbmgrp(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends idbmgrp implements Structure.ByReference {
		
	};
	public static class ByValue extends idbmgrp implements Structure.ByValue {
		
	};
}
