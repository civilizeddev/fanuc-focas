package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbwvprm3 extends Structure {
	public short condition;
	public short trg_unittype;
	public byte trg_adr;
	public byte trg_bit;
	public short trg_no;
	public short alm_kind;
	public short alm_no;
	public short alm_axis;
	public short reserve1;
	public NativeLong delay;
	public NativeLong t_range;
	public short wav_cycle;
	public short dio_cycle;
	public fwlib32.iodbwave.ch_struct[] ch = new fwlib32.iodbwave.ch_struct[40];
	public static class ch_struct extends Structure {
		public short kind;
		public short reserve2;
		public u_union u;
		public static class u_union extends Union {
			public ax_struct ax;
			public io_struct io;
			public static class ax_struct extends Structure {
				public NativeLong axis;
				public NativeLong reserve3;
				public ax_struct() {
					super();
				}
				protected List<? > getFieldOrder() {
					return Arrays.asList("axis", "reserve3");
				}
				public ax_struct(NativeLong axis, NativeLong reserve3) {
					super();
					this.axis = axis;
					this.reserve3 = reserve3;
				}
				public ax_struct(Pointer peer) {
					super(peer);
				}
				public static class ByReference extends ax_struct implements Structure.ByReference {
					
				};
				public static class ByValue extends ax_struct implements Structure.ByValue {
					
				};
			};
			public static class io_struct extends Structure {
				public short unittype;
				public byte adr;
				public byte bit;
				public short no;
				public short reserve3;
				public io_struct() {
					super();
				}
				protected List<? > getFieldOrder() {
					return Arrays.asList("unittype", "adr", "bit", "no", "reserve3");
				}
				public io_struct(short unittype, byte adr, byte bit, short no, short reserve3) {
					super();
					this.unittype = unittype;
					this.adr = adr;
					this.bit = bit;
					this.no = no;
					this.reserve3 = reserve3;
				}
				public io_struct(Pointer peer) {
					super(peer);
				}
				public static class ByReference extends io_struct implements Structure.ByReference {
					
				};
				public static class ByValue extends io_struct implements Structure.ByValue {
					
				};
			};
			public u_union() {
				super();
			}
			public u_union(ax_struct ax) {
				super();
				this.ax = ax;
				setType(ax_struct.class);
			}
			public u_union(io_struct io) {
				super();
				this.io = io;
				setType(io_struct.class);
			}
			public u_union(Pointer peer) {
				super(peer);
			}
			public static class ByReference extends u_union implements Structure.ByReference {
				
			};
			public static class ByValue extends u_union implements Structure.ByValue {
				
			};
		};
		public ch_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("kind", "reserve2", "u");
		}
		public ch_struct(short kind, short reserve2, u_union u) {
			super();
			this.kind = kind;
			this.reserve2 = reserve2;
			this.u = u;
		}
		public ch_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends ch_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends ch_struct implements Structure.ByValue {
			
		};
	};
	public iodbwvprm3() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("condition", "trg_unittype", "trg_adr", "trg_bit", "trg_no", "alm_kind", "alm_no", "alm_axis", "reserve1", "delay", "t_range", "wav_cycle", "dio_cycle", "ch");
	}
	public iodbwvprm3(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbwvprm3 implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbwvprm3 implements Structure.ByValue {
		
	};
}
