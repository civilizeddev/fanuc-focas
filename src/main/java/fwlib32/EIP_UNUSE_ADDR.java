package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EIP_UNUSE_ADDR extends Structure {
	public short Param1;
	public short Param2;
	public NativeLong Param3;
	public EIP_UNUSE_ADDR() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Param1", "Param2", "Param3");
	}
	public EIP_UNUSE_ADDR(short Param1, short Param2, NativeLong Param3) {
		super();
		this.Param1 = Param1;
		this.Param2 = Param2;
		this.Param3 = Param3;
	}
	public EIP_UNUSE_ADDR(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends EIP_UNUSE_ADDR implements Structure.ByReference {
		
	};
	public static class ByValue extends EIP_UNUSE_ADDR implements Structure.ByValue {
		
	};
}
