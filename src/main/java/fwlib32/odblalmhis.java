package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odblalmhis extends Structure {
	public short s_no;
	public short e_no;
	public fwlib32.odbahis.alm_his_struct[] alm_his = new fwlib32.odbahis.alm_his_struct[50];
	public static class alm_his_struct extends Structure {
		public short lalm_wrg;
		public short alm_grp;
		public short alm_wrg_no;
		public short year;
		public short month;
		public short day;
		public short hour;
		public short minute;
		public short second;
		public short len_msg;
		public byte[] alm_msg = new byte[64];
		public short[] reserve = new short[4];
		public alm_his_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("lalm_wrg", "alm_grp", "alm_wrg_no", "year", "month", "day", "hour", "minute", "second", "len_msg", "alm_msg", "reserve");
		}
		public alm_his_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends alm_his_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends alm_his_struct implements Structure.ByValue {
			
		};
	};
	public odblalmhis() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("s_no", "e_no", "alm_his");
	}
	public odblalmhis(short s_no, short e_no, fwlib32.odbahis.alm_his_struct alm_his[]) {
		super();
		this.s_no = s_no;
		this.e_no = e_no;
		if ((alm_his.length != this.alm_his.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.alm_his = alm_his;
	}
	public odblalmhis(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odblalmhis implements Structure.ByReference {
		
	};
	public static class ByValue extends odblalmhis implements Structure.ByValue {
		
	};
}
