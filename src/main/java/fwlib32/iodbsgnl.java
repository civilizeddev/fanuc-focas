package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbsgnl extends Structure {
	/** dummy */
	public short datano;
	/** data select flag */
	public short type;
	/** mode signal */
	public short mode;
	/** Manual handle feed axis selection signal */
	public short hndl_ax;
	/** Manual handle feed travel distance selection signal */
	public short hndl_mv;
	/** rapid traverse override signal */
	public short rpd_ovrd;
	/** manual feedrate override signal */
	public short jog_ovrd;
	/** feedrate override signal */
	public short feed_ovrd;
	/** (not used) */
	public short spdl_ovrd;
	/** optional block skip signal */
	public short blck_del;
	/** single block signal */
	public short sngl_blck;
	/** machine lock signal */
	public short machn_lock;
	/** dry run signal */
	public short dry_run;
	/** memory protection signal */
	public short mem_prtct;
	/** automatic operation halt signal */
	public short feed_hold;
	public iodbsgnl() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("datano", "type", "mode", "hndl_ax", "hndl_mv", "rpd_ovrd", "jog_ovrd", "feed_ovrd", "spdl_ovrd", "blck_del", "sngl_blck", "machn_lock", "dry_run", "mem_prtct", "feed_hold");
	}
	public iodbsgnl(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbsgnl implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbsgnl implements Structure.ByValue {
		
	};
}
