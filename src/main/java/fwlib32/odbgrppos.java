package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbgrppos extends Structure {
	/** Absolute position */
	public posval abs;
	/** Machine position */
	public posval mcn;
	/** Feed type */
	public short feed_type;
	/** Padding */
	public short reserved;
	public odbgrppos() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("abs", "mcn", "feed_type", "reserved");
	}
	public odbgrppos(posval abs, posval mcn, short feed_type, short reserved) {
		super();
		this.abs = abs;
		this.mcn = mcn;
		this.feed_type = feed_type;
		this.reserved = reserved;
	}
	public odbgrppos(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbgrppos implements Structure.ByReference {
		
	};
	public static class ByValue extends odbgrppos implements Structure.ByValue {
		
	};
}
