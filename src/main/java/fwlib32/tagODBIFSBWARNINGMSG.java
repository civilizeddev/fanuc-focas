package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagODBIFSBWARNINGMSG extends Structure {
	/** \ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\u050d\ufffd */
	public short line;
	/** \ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffd?\ufffdu\ufffd\u050d\ufffd(\ufffd\u0290M\ufffd\ufffd) */
	public short slv_src;
	/** \ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffd?\ufffdu\ufffd\u050d\ufffd(\ufffd\u0290M\ufffd\ufffd) */
	public short slv_dst;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO?\ufffdC\ufffdv */
	public short type;
	/** \ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffdb\ufffdZ?\ufffdW(\u0730\ufffd\u0778\u078e\ufffd\ufffd) */
	public byte[] wm_typ = new byte[32];
	/** \ufffd\ufffd?\ufffdj\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffdb\ufffdZ?\ufffdW(\u0730\ufffd\u0778\u0789\u04cf\ufffd) */
	public byte[] wm_pnt = new byte[32];
	public tagODBIFSBWARNINGMSG() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("line", "slv_src", "slv_dst", "type", "wm_typ", "wm_pnt");
	}
	public tagODBIFSBWARNINGMSG(short line, short slv_src, short slv_dst, short type, byte wm_typ[], byte wm_pnt[]) {
		super();
		this.line = line;
		this.slv_src = slv_src;
		this.slv_dst = slv_dst;
		this.type = type;
		if ((wm_typ.length != this.wm_typ.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.wm_typ = wm_typ;
		if ((wm_pnt.length != this.wm_pnt.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.wm_pnt = wm_pnt;
	}
	public tagODBIFSBWARNINGMSG(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagODBIFSBWARNINGMSG implements Structure.ByReference {
		
	};
	public static class ByValue extends tagODBIFSBWARNINGMSG implements Structure.ByValue {
		
	};
}
