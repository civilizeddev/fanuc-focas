package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odblat_grp1 extends Structure {
	public NativeLong nnum;
	public byte[] prog = new byte[36];
	public byte year;
	public byte mon;
	public byte day;
	public byte hour;
	public byte min;
	public byte sec;
	public byte[] reserved = new byte[2];
	public odblat_grp1() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("nnum", "prog", "year", "mon", "day", "hour", "min", "sec", "reserved");
	}
	public odblat_grp1(NativeLong nnum, byte prog[], byte year, byte mon, byte day, byte hour, byte min, byte sec, byte reserved[]) {
		super();
		this.nnum = nnum;
		if ((prog.length != this.prog.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.prog = prog;
		this.year = year;
		this.mon = mon;
		this.day = day;
		this.hour = hour;
		this.min = min;
		this.sec = sec;
		if ((reserved.length != this.reserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserved = reserved;
	}
	public odblat_grp1(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odblat_grp1 implements Structure.ByReference {
		
	};
	public static class ByValue extends odblat_grp1 implements Structure.ByValue {
		
	};
}
