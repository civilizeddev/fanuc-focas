package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbembethprmw extends Structure {
	public embethprm_union embethprm;
	public static class embethprm_union extends Union {
		public embtcpprmw tcpip;
		public fwlibprmw fwlib;
		public flinkprmw flink;
		public byte[] MACAddress = new byte[13];
		public embethprm_union() {
			super();
		}
		public embethprm_union(embtcpprmw tcpip) {
			super();
			this.tcpip = tcpip;
			setType(embtcpprmw.class);
		}
		public embethprm_union(fwlibprmw fwlib) {
			super();
			this.fwlib = fwlib;
			setType(fwlibprmw.class);
		}
		public embethprm_union(flinkprmw flink) {
			super();
			this.flink = flink;
			setType(flinkprmw.class);
		}
		public embethprm_union(byte MACAddress[]) {
			super();
			if ((MACAddress.length != this.MACAddress.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.MACAddress = MACAddress;
			setType(byte[].class);
		}
		public embethprm_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends embethprm_union implements Structure.ByReference {
			
		};
		public static class ByValue extends embethprm_union implements Structure.ByValue {
			
		};
	};
	public iodbembethprmw() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("embethprm");
	}
	public iodbembethprmw(embethprm_union embethprm) {
		super();
		this.embethprm = embethprm;
	}
	public iodbembethprmw(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbembethprmw implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbembethprmw implements Structure.ByValue {
		
	};
}
