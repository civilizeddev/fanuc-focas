package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbrstinfo extends Structure {
	public NativeLong seq_no;
	public NativeLong c_blck_cnt;
	public NativeLong t_blck_cnt;
	public NativeLong call_from_no;
	public NativeLong call_from_blck;
	public short prg_rep;
	public short seq_rep;
	public short c_blck_rep;
	public short nest_lv;
	public byte[] prg_name = new byte[246];
	public byte[] dummy1 = new byte[2];
	public byte[] call_from_prg = new byte[246];
	public byte[] dummy2 = new byte[2];
	public byte edit_flag;
	public byte reserve;
	public short repeat;
	public NativeLong wait_m_code;
	public iodbrstinfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("seq_no", "c_blck_cnt", "t_blck_cnt", "call_from_no", "call_from_blck", "prg_rep", "seq_rep", "c_blck_rep", "nest_lv", "prg_name", "dummy1", "call_from_prg", "dummy2", "edit_flag", "reserve", "repeat", "wait_m_code");
	}
	public iodbrstinfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbrstinfo implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbrstinfo implements Structure.ByValue {
		
	};
}
