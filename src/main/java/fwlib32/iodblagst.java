package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodblagst extends Structure {
	public iodblagst.gasflow_struct[] gasflow = new iodblagst.gasflow_struct[3];
	public static class gasflow_struct extends Structure {
		public short slct;
		public short pre_time;
		public short pre_press;
		public short proc_press;
		public short end_time;
		public short end_press;
		public short[] reserve = new short[3];
		public gasflow_struct() {
			super();
		}
		protected List<String> getFieldOrder() {
			return Arrays.asList("slct", "pre_time", "pre_press", "proc_press", "end_time", "end_press", "reserve");
		}
		public gasflow_struct(short slct, short pre_time, short pre_press, short proc_press, short end_time, short end_press, short reserve[]) {
			super();
			this.slct = slct;
			this.pre_time = pre_time;
			this.pre_press = pre_press;
			this.proc_press = proc_press;
			this.end_time = end_time;
			this.end_press = end_press;
			if ((reserve.length != this.reserve.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.reserve = reserve;
		}
		public gasflow_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends gasflow_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends gasflow_struct implements Structure.ByValue {
			
		};
	};
	public iodblagst() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("gasflow");
	}
	public iodblagst(iodblagst.gasflow_struct gasflow[]) {
		super();
		if ((gasflow.length != this.gasflow.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.gasflow = gasflow;
	}
	public iodblagst(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodblagst implements Structure.ByReference {
		
	};
	public static class ByValue extends iodblagst implements Structure.ByValue {
		
	};
}
