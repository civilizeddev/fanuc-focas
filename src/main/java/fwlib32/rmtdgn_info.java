package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class rmtdgn_info extends Structure {
	/** Receipt Number */
	public NativeLong receipt_num;
	/** Time */
	public NativeLong time;
	/** Status */
	public short status;
	/** Error Number */
	public short err_num;
	/** Error Message */
	public byte[] err_msg = new byte[36];
	public rmtdgn_info() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("receipt_num", "time", "status", "err_num", "err_msg");
	}
	public rmtdgn_info(NativeLong receipt_num, NativeLong time, short status, short err_num, byte err_msg[]) {
		super();
		this.receipt_num = receipt_num;
		this.time = time;
		this.status = status;
		this.err_num = err_num;
		if ((err_msg.length != this.err_msg.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.err_msg = err_msg;
	}
	public rmtdgn_info(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends rmtdgn_info implements Structure.ByReference {
		
	};
	public static class ByValue extends rmtdgn_info implements Structure.ByValue {
		
	};
}
