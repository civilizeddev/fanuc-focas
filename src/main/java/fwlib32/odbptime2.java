package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbptime2 extends Structure {
	public short num;
	public fwlib32.iodbprm.data_struct[] data = new fwlib32.iodbprm.data_struct[10];
	public static class data_struct extends Structure {
		public byte[] filename = new byte[36];
		public short hour;
		public byte min;
		public byte sec;
		public data_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("filename", "hour", "min", "sec");
		}
		public data_struct(byte filename[], short hour, byte min, byte sec) {
			super();
			if ((filename.length != this.filename.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.filename = filename;
			this.hour = hour;
			this.min = min;
			this.sec = sec;
		}
		public data_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends data_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends data_struct implements Structure.ByValue {
			
		};
	};
	public odbptime2() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("num", "data");
	}
	public odbptime2(short num, fwlib32.iodbprm.data_struct data[]) {
		super();
		this.num = num;
		if ((data.length != this.data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
	}
	public odbptime2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbptime2 implements Structure.ByReference {
		
	};
	public static class ByValue extends odbptime2 implements Structure.ByValue {
		
	};
}
