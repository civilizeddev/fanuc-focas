package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagODBIFSBSYSALM extends Structure {
	public NativeLong num_sys_alm;
	public short error_line;
	public short error_slvnum1;
	public short error_slvnum2;
	public short year;
	public short mon;
	public short day;
	public short hour;
	public short min;
	public short sec;
	public byte[] alarm_cause = new byte[100];
	public tagODBIFSBSYSALM() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("num_sys_alm", "error_line", "error_slvnum1", "error_slvnum2", "year", "mon", "day", "hour", "min", "sec", "alarm_cause");
	}
	public tagODBIFSBSYSALM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagODBIFSBSYSALM implements Structure.ByReference {
		
	};
	public static class ByValue extends tagODBIFSBSYSALM implements Structure.ByValue {
		
	};
}
