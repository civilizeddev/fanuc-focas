package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbindexdat extends Structure {
	public NativeLong pos;
	public NativeLong inp_width;
	public short speed;
	public byte f_flg;
	public byte dummy;
	public iodbindexdat() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pos", "inp_width", "speed", "f_flg", "dummy");
	}
	public iodbindexdat(NativeLong pos, NativeLong inp_width, short speed, byte f_flg, byte dummy) {
		super();
		this.pos = pos;
		this.inp_width = inp_width;
		this.speed = speed;
		this.f_flg = f_flg;
		this.dummy = dummy;
	}
	public iodbindexdat(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbindexdat implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbindexdat implements Structure.ByValue {
		
	};
}
