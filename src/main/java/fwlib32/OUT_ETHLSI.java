package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_ETHLSI extends Structure {
	public short Type;
	public short Baudrate;
	public short RecvPacketCount;
	public short RecvBroadcastCount;
	public short SendPacketCount;
	public lst_union lst;
	public static class lst_union extends Union {
		public EMBLSI emb;
		public BOARDLSI board;
		public lst_union() {
			super();
		}
		public lst_union(EMBLSI emb) {
			super();
			this.emb = emb;
			setType(EMBLSI.class);
		}
		public lst_union(BOARDLSI board) {
			super();
			this.board = board;
			setType(BOARDLSI.class);
		}
		public lst_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends lst_union implements Structure.ByReference {
			
		};
		public static class ByValue extends lst_union implements Structure.ByValue {
			
		};
	};
	public OUT_ETHLSI() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("Type", "Baudrate", "RecvPacketCount", "RecvBroadcastCount", "SendPacketCount", "lst");
	}
	public OUT_ETHLSI(short Type, short Baudrate, short RecvPacketCount, short RecvBroadcastCount, short SendPacketCount, lst_union lst) {
		super();
		this.Type = Type;
		this.Baudrate = Baudrate;
		this.RecvPacketCount = RecvPacketCount;
		this.RecvBroadcastCount = RecvBroadcastCount;
		this.SendPacketCount = SendPacketCount;
		this.lst = lst;
	}
	public OUT_ETHLSI(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_ETHLSI implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_ETHLSI implements Structure.ByValue {
		
	};
}
