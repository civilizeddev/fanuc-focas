package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Union;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class hspdatam extends Union {
	public byte[] cdata = new byte[32];
	public short[] idata = new short[32];
	public NativeLong[] ldata = new NativeLong[32];
	public realprm[] rdata = new realprm[32];
	public hspdatam() {
		super();
	}
	public hspdatam(byte cdata[]) {
		super();
		if ((cdata.length != this.cdata.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.cdata = cdata;
		setType(byte[].class);
	}
	public hspdatam(short idata[]) {
		super();
		if ((idata.length != this.idata.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.idata = idata;
		setType(short[].class);
	}
	public hspdatam(NativeLong ldata[]) {
		super();
		if ((ldata.length != this.ldata.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ldata = ldata;
		setType(NativeLong[].class);
	}
	public hspdatam(realprm rdata[]) {
		super();
		if ((rdata.length != this.rdata.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.rdata = rdata;
		setType(realprm[].class);
	}
	public hspdatam(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends hspdatam implements com.sun.jna.Structure.ByReference {
		
	};
	public static class ByValue extends hspdatam implements com.sun.jna.Structure.ByValue {
		
	};
}
