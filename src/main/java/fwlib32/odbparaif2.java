package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbparaif2 extends Structure {
	/** parameter number */
	public short prm_no;
	/** size */
	public short size;
	/** array type */
	public short array;
	/** unit */
	public short unit;
	/** dimension */
	public short dim;
	/** input type */
	public short input;
	/** display infomation */
	public short display;
	/** others */
	public short others;
	public odbparaif2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("prm_no", "size", "array", "unit", "dim", "input", "display", "others");
	}
	public odbparaif2(short prm_no, short size, short array, short unit, short dim, short input, short display, short others) {
		super();
		this.prm_no = prm_no;
		this.size = size;
		this.array = array;
		this.unit = unit;
		this.dim = dim;
		this.input = input;
		this.display = display;
		this.others = others;
	}
	public odbparaif2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbparaif2 implements Structure.ByReference {
		
	};
	public static class ByValue extends odbparaif2 implements Structure.ByValue {
		
	};
}
