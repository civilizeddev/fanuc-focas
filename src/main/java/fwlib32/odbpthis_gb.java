package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbpthis_gb extends Structure {
	public date_struct date;
	public byte reserve1;
	public NativeLong info1;
	public byte path_num;
	public byte[] reserve2 = new byte[3];
	public static class date_struct extends Structure {
		public short year;
		public byte mon;
		public byte day;
		public byte hour;
		public byte min;
		public byte sec;
		public date_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("year", "mon", "day", "hour", "min", "sec");
		}
		public date_struct(short year, byte mon, byte day, byte hour, byte min, byte sec) {
			super();
			this.year = year;
			this.mon = mon;
			this.day = day;
			this.hour = hour;
			this.min = min;
			this.sec = sec;
		}
		public date_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends date_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends date_struct implements Structure.ByValue {
			
		};
	};
	public odbpthis_gb() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("date", "reserve1", "info1", "path_num", "reserve2");
	}
	public odbpthis_gb(date_struct date, byte reserve1, NativeLong info1, byte path_num, byte reserve2[]) {
		super();
		this.date = date;
		this.reserve1 = reserve1;
		this.info1 = info1;
		this.path_num = path_num;
		if ((reserve2.length != this.reserve2.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserve2 = reserve2;
	}
	public odbpthis_gb(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbpthis_gb implements Structure.ByReference {
		
	};
	public static class ByValue extends odbpthis_gb implements Structure.ByValue {
		
	};
}
