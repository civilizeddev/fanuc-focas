package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class dcsmcc extends Structure {
	public time_struct time;
	/** Last Test No. */
	public NativeLong testno;
	/** Test Request DI */
	public NativeLong sign;
	public static class time_struct extends Structure {
		public NativeLong hour;
		public NativeLong minute;
		public NativeLong second;
		public time_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("hour", "minute", "second");
		}
		public time_struct(NativeLong hour, NativeLong minute, NativeLong second) {
			super();
			this.hour = hour;
			this.minute = minute;
			this.second = second;
		}
		public time_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends time_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends time_struct implements Structure.ByValue {
			
		};
	};
	public dcsmcc() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("time", "testno", "sign");
	}
	public dcsmcc(time_struct time, NativeLong testno, NativeLong sign) {
		super();
		this.time = time;
		this.testno = testno;
		this.sign = sign;
	}
	public dcsmcc(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends dcsmcc implements Structure.ByReference {
		
	};
	public static class ByValue extends dcsmcc implements Structure.ByValue {
		
	};
}
