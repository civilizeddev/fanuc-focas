package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbptlinf extends Structure {
	public short tld_max;
	public short mlt_max;
	public short reserve;
	public short[] tld_size = new short[16];
	public short[] mlt_size = new short[16];
	public short[] reserves = new short[16];
	public odbptlinf() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("tld_max", "mlt_max", "reserve", "tld_size", "mlt_size", "reserves");
	}
	public odbptlinf(short tld_max, short mlt_max, short reserve, short tld_size[], short mlt_size[], short reserves[]) {
		super();
		this.tld_max = tld_max;
		this.mlt_max = mlt_max;
		this.reserve = reserve;
		if ((tld_size.length != this.tld_size.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.tld_size = tld_size;
		if ((mlt_size.length != this.mlt_size.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.mlt_size = mlt_size;
		if ((reserves.length != this.reserves.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserves = reserves;
	}
	public odbptlinf(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbptlinf implements Structure.ByReference {
		
	};
	public static class ByValue extends odbptlinf implements Structure.ByValue {
		
	};
}
