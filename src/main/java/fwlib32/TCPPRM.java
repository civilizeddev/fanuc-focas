package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TCPPRM extends Structure {
	public byte[] OwnIPAddress = new byte[16];
	public byte[] SubNetMask = new byte[16];
	public byte[] RouterIPAddress = new byte[16];
	public TCPPRM() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("OwnIPAddress", "SubNetMask", "RouterIPAddress");
	}
	public TCPPRM(byte OwnIPAddress[], byte SubNetMask[], byte RouterIPAddress[]) {
		super();
		if ((OwnIPAddress.length != this.OwnIPAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.OwnIPAddress = OwnIPAddress;
		if ((SubNetMask.length != this.SubNetMask.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.SubNetMask = SubNetMask;
		if ((RouterIPAddress.length != this.RouterIPAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.RouterIPAddress = RouterIPAddress;
	}
	public TCPPRM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TCPPRM implements Structure.ByReference {
		
	};
	public static class ByValue extends TCPPRM implements Structure.ByValue {
		
	};
}
