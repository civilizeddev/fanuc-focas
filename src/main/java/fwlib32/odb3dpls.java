package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odb3dpls extends Structure {
	public NativeLong right_angle_x;
	public NativeLong right_angle_y;
	public NativeLong tool_axis;
	public NativeLong tool_tip_a_b;
	public NativeLong tool_tip_c;
	public odb3dpls() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("right_angle_x", "right_angle_y", "tool_axis", "tool_tip_a_b", "tool_tip_c");
	}
	public odb3dpls(NativeLong right_angle_x, NativeLong right_angle_y, NativeLong tool_axis, NativeLong tool_tip_a_b, NativeLong tool_tip_c) {
		super();
		this.right_angle_x = right_angle_x;
		this.right_angle_y = right_angle_y;
		this.tool_axis = tool_axis;
		this.tool_tip_a_b = tool_tip_a_b;
		this.tool_tip_c = tool_tip_c;
	}
	public odb3dpls(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odb3dpls implements Structure.ByReference {
		
	};
	public static class ByValue extends odb3dpls implements Structure.ByValue {
		
	};
}
