package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagODBIFSBMNTSP extends Structure {
	/** Spindle Number */
	public short spdl_num;
	/** Spindle Name */
	public byte[] spdl_name = new byte[4];
	public short line;
	/** Amp Name */
	public byte[] amp_name = new byte[8];
	/** Amp Series */
	public byte[] amp_series = new byte[12];
	/** Amp Power */
	public byte[] amp_pwr = new byte[8];
	/** Amp Edition */
	public byte[] amp_edt = new byte[8];
	/** Amp Axis Number */
	public short amp_spdl_num;
	/** Amp Specificaion */
	public byte[] amp_spec_num = new byte[23];
	/** Amp Serial Number */
	public byte[] amp_serial_num = new byte[13];
	public tagODBIFSBMNTSP() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("spdl_num", "spdl_name", "line", "amp_name", "amp_series", "amp_pwr", "amp_edt", "amp_spdl_num", "amp_spec_num", "amp_serial_num");
	}
	public tagODBIFSBMNTSP(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagODBIFSBMNTSP implements Structure.ByReference {
		
	};
	public static class ByValue extends tagODBIFSBMNTSP implements Structure.ByValue {
		
	};
}
