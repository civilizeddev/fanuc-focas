package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_PND_MNTINFO extends Structure {
	public byte Status;
	public byte[] pad = new byte[3];
	public short VendorID;
	public short DeviceID;
	public short InputSize;
	public short OutputSize;
	public short RcvRead;
	public short RcvWrite;
	public short RcvRt;
	public short RcvRtU;
	public short RcvPause;
	public short RcvLldp;
	public short InputCycleTime;
	public short OutputCycleTime;
	public short DoRefreshTime;
	public short DiRefreshTIme;
	public OUT_PND_MNTINFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("Status", "pad", "VendorID", "DeviceID", "InputSize", "OutputSize", "RcvRead", "RcvWrite", "RcvRt", "RcvRtU", "RcvPause", "RcvLldp", "InputCycleTime", "OutputCycleTime", "DoRefreshTime", "DiRefreshTIme");
	}
	public OUT_PND_MNTINFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_PND_MNTINFO implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_PND_MNTINFO implements Structure.ByValue {
		
	};
}
