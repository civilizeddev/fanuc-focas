package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_FLNTNODETBL extends Structure {
	public byte[] NodeName = new byte[12];
	public byte[] VendorName = new byte[12];
	public byte[] MakerType = new byte[12];
	public short Area1Address;
	public short Area1Size;
	public short Area2Address;
	public short Area2Size;
	public short Rct;
	public short Uls;
	public byte TokenWatch;
	public byte MinFrame;
	public byte Lks;
	public byte Status;
	public OUT_FLNTNODETBL() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("NodeName", "VendorName", "MakerType", "Area1Address", "Area1Size", "Area2Address", "Area2Size", "Rct", "Uls", "TokenWatch", "MinFrame", "Lks", "Status");
	}
	public OUT_FLNTNODETBL(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_FLNTNODETBL implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_FLNTNODETBL implements Structure.ByValue {
		
	};
}
