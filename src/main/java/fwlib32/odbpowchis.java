package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbpowchis extends Structure {
	public NativeLong get_time;
	public NativeLong powc_axis;
	public NativeLong powc_spindle;
	public NativeLong powc_outer;
	public odbpowchis() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("get_time", "powc_axis", "powc_spindle", "powc_outer");
	}
	public odbpowchis(NativeLong get_time, NativeLong powc_axis, NativeLong powc_spindle, NativeLong powc_outer) {
		super();
		this.get_time = get_time;
		this.powc_axis = powc_axis;
		this.powc_spindle = powc_spindle;
		this.powc_outer = powc_outer;
	}
	public odbpowchis(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbpowchis implements Structure.ByReference {
		
	};
	public static class ByValue extends odbpowchis implements Structure.ByValue {
		
	};
}
