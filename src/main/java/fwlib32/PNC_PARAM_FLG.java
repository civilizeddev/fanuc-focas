package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PNC_PARAM_FLG extends Structure {
	public byte OwnIpAddress;
	public byte SubNetmask;
	public byte RouterIpAddress;
	public byte PingIpAddress;
	public byte PingCount;
	public byte PnControllerMode;
	public byte BasicOption1;
	public byte reserve1;
	public byte DiAddrTop;
	public byte DoAddrTop;
	public byte Status;
	public byte reserve2;
	public PNC_PARAM_FLG() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("OwnIpAddress", "SubNetmask", "RouterIpAddress", "PingIpAddress", "PingCount", "PnControllerMode", "BasicOption1", "reserve1", "DiAddrTop", "DoAddrTop", "Status", "reserve2");
	}
	public PNC_PARAM_FLG(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PNC_PARAM_FLG implements Structure.ByReference {
		
	};
	public static class ByValue extends PNC_PARAM_FLG implements Structure.ByValue {
		
	};
}
