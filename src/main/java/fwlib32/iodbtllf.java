package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbtllf extends Structure {
	public NativeLong T_code_sum;
	public NativeLong life_count_sum;
	public NativeLong rem_life_sum;
	public NativeLong max_life_sum;
	public NativeLong notice_life_sum;
	public short tools_sum;
	public byte notice_stat_sum;
	public byte count_type_sum;
	public iodbtllf() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("T_code_sum", "life_count_sum", "rem_life_sum", "max_life_sum", "notice_life_sum", "tools_sum", "notice_stat_sum", "count_type_sum");
	}
	public iodbtllf(NativeLong T_code_sum, NativeLong life_count_sum, NativeLong rem_life_sum, NativeLong max_life_sum, NativeLong notice_life_sum, short tools_sum, byte notice_stat_sum, byte count_type_sum) {
		super();
		this.T_code_sum = T_code_sum;
		this.life_count_sum = life_count_sum;
		this.rem_life_sum = rem_life_sum;
		this.max_life_sum = max_life_sum;
		this.notice_life_sum = notice_life_sum;
		this.tools_sum = tools_sum;
		this.notice_stat_sum = notice_stat_sum;
		this.count_type_sum = count_type_sum;
	}
	public iodbtllf(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbtllf implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbtllf implements Structure.ByValue {
		
	};
}
