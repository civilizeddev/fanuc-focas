package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class out_dsfile extends Structure {
	/** year */
	public short year;
	/** month */
	public short mon;
	/** day */
	public short day;
	/** hour */
	public short hour;
	/** minute */
	public short min;
	/** second */
	public short sec;
	/** size */
	public NativeLong size;
	/** attribute */
	public NativeLong attr;
	/** file name */
	public byte[] file = new byte[36];
	/** file infomation */
	public byte[] info = new byte[128];
	public out_dsfile() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("year", "mon", "day", "hour", "min", "sec", "size", "attr", "file", "info");
	}
	public out_dsfile(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends out_dsfile implements Structure.ByReference {
		
	};
	public static class ByValue extends out_dsfile implements Structure.ByValue {
		
	};
}
