package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbprfadr extends Structure {
	public byte di_size;
	public byte di_type;
	public short di_addr;
	public short reserve1;
	public byte do_size;
	public byte do_type;
	public short do_addr;
	public short reserve2;
	public byte dgn_size;
	public byte dgn_type;
	public short dgn_addr;
	public iodbprfadr() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("di_size", "di_type", "di_addr", "reserve1", "do_size", "do_type", "do_addr", "reserve2", "dgn_size", "dgn_type", "dgn_addr");
	}
	public iodbprfadr(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbprfadr implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbprfadr implements Structure.ByValue {
		
	};
}
