package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbbaxis extends Structure {
	/** b-axis command exist or not */
	public short flag;
	/** b-axis command */
	public short command;
	/** b-axis speed */
	public short speed;
	/** b-axis sub data */
	public NativeLong sub_data;
	public odbbaxis() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("flag", "command", "speed", "sub_data");
	}
	public odbbaxis(short flag, short command, short speed, NativeLong sub_data) {
		super();
		this.flag = flag;
		this.command = command;
		this.speed = speed;
		this.sub_data = sub_data;
	}
	public odbbaxis(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbbaxis implements Structure.ByReference {
		
	};
	public static class ByValue extends odbbaxis implements Structure.ByValue {
		
	};
}
