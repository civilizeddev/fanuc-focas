package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OUT_PBMCOMINFO extends Structure {
	public cominfo_union cominfo;
	public static class cominfo_union extends Union {
		public byte crnt_mode;
		public T_DATA_REF_TIM data_ref_tim;
		public cominfo_union() {
			super();
		}
		public cominfo_union(byte crnt_mode) {
			super();
			this.crnt_mode = crnt_mode;
			setType(Byte.TYPE);
		}
		public cominfo_union(T_DATA_REF_TIM data_ref_tim) {
			super();
			this.data_ref_tim = data_ref_tim;
			setType(T_DATA_REF_TIM.class);
		}
		public cominfo_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends cominfo_union implements Structure.ByReference {
			
		};
		public static class ByValue extends cominfo_union implements Structure.ByValue {
			
		};
	};
	public OUT_PBMCOMINFO() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("cominfo");
	}
	public OUT_PBMCOMINFO(cominfo_union cominfo) {
		super();
		this.cominfo = cominfo;
	}
	public OUT_PBMCOMINFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OUT_PBMCOMINFO implements Structure.ByReference {
		
	};
	public static class ByValue extends OUT_PBMCOMINFO implements Structure.ByValue {
		
	};
}
