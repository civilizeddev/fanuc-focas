package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbfinform extends Structure {
	/** Slot Number */
	public NativeLong slotno;
	/** Slot Name */
	public byte[] slotname = new byte[12];
	/** Number of F-ROM SYSTEM data */
	public NativeLong fromnum;
	public fwlib32.odbparaif.info_struct[] info = new fwlib32.odbparaif.info_struct[128];
	public static class info_struct extends Structure {
		/** F-ROM SYSTEM data Name */
		public byte[] sysname = new byte[12];
		/** F-ROM Size */
		public NativeLong fromsize;
		/** F-ROM data attribute */
		public NativeLong fromattrib;
		public info_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("sysname", "fromsize", "fromattrib");
		}
		public info_struct(byte sysname[], NativeLong fromsize, NativeLong fromattrib) {
			super();
			if ((sysname.length != this.sysname.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.sysname = sysname;
			this.fromsize = fromsize;
			this.fromattrib = fromattrib;
		}
		public info_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends info_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends info_struct implements Structure.ByValue {
			
		};
	};
	public odbfinform() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("slotno", "slotname", "fromnum", "info");
	}
	public odbfinform(NativeLong slotno, byte slotname[], NativeLong fromnum, fwlib32.odbparaif.info_struct info[]) {
		super();
		this.slotno = slotno;
		if ((slotname.length != this.slotname.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.slotname = slotname;
		this.fromnum = fromnum;
		if ((info.length != this.info.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.info = info;
	}
	public odbfinform(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbfinform implements Structure.ByReference {
		
	};
	public static class ByValue extends odbfinform implements Structure.ByValue {
		
	};
}
