package fwlib32;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class iodbmlttl extends Structure {
	public short slct;
	public short m_tl_no;
	public NativeLong m_tl_radius;
	public NativeLong m_tl_angle;
	public NativeLong x_axis_ofs;
	public NativeLong y_axis_ofs;
	public byte tl_shape;
	public NativeLong tl_size_i;
	public NativeLong tl_size_j;
	public NativeLong tl_angle;
	public byte m_radius_dec;
	public byte m_angle_dec;
	public byte x_axis_dec;
	public byte y_axis_dec;
	public byte tl_size_i_dec;
	public byte tl_size_j_dec;
	public byte tl_angle_dec;
	public byte reserve;
	public NativeLong[] reserves = new NativeLong[5];
	public iodbmlttl() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("slct", "m_tl_no", "m_tl_radius", "m_tl_angle", "x_axis_ofs", "y_axis_ofs", "tl_shape", "tl_size_i", "tl_size_j", "tl_angle", "m_radius_dec", "m_angle_dec", "x_axis_dec", "y_axis_dec", "tl_size_i_dec", "tl_size_j_dec", "tl_angle_dec", "reserve", "reserves");
	}
	public iodbmlttl(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends iodbmlttl implements Structure.ByReference {
		
	};
	public static class ByValue extends iodbmlttl implements Structure.ByValue {
		
	};
}
