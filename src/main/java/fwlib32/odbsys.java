package fwlib32;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class odbsys extends Structure {
	/** additional information */
	public short addinfo;
	/** maximum axis number */
	public short max_axis;
	/** cnc type <ascii char> */
	public byte[] cnc_type = new byte[2];
	/** M/T/TT <ascii char> */
	public byte[] mt_type = new byte[2];
	/** series NO. <ascii char> */
	public byte[] series = new byte[4];
	/** version NO.<ascii char> */
	public byte[] version = new byte[4];
	/** axis number<ascii char> */
	public byte[] axes = new byte[2];
	public odbsys() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("addinfo", "max_axis", "cnc_type", "mt_type", "series", "version", "axes");
	}
	public odbsys(short addinfo, short max_axis, byte cnc_type[], byte mt_type[], byte series[], byte version[], byte axes[]) {
		super();
		this.addinfo = addinfo;
		this.max_axis = max_axis;
		if ((cnc_type.length != this.cnc_type.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.cnc_type = cnc_type;
		if ((mt_type.length != this.mt_type.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.mt_type = mt_type;
		if ((series.length != this.series.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.series = series;
		if ((version.length != this.version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.version = version;
		if ((axes.length != this.axes.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.axes = axes;
	}
	public odbsys(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends odbsys implements Structure.ByReference {
		
	};
	public static class ByValue extends odbsys implements Structure.ByValue {
		
	};
}
